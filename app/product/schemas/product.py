from typing import Dict, List
from pydantic import BaseModel, Field


class GetProductListResponseSchema(BaseModel):
    name: str = Field(..., description="Product Name")
    added_by: str = Field(..., description="Added by seller or admin")
    user_id: int = Field(..., description="Owner's id")

    class Config:
        orm_mode = True


class AddProductRequestSchema(BaseModel):
    name: str = Field(..., description="Product Name")
    added_by: str = Field(..., description="Added by seller or admin")
    category_id: int = Field(..., description="category_id")
    brand_id: int = Field(..., description="brand_id")
    photos: str = Field(..., description="photos")
    thumbnail_img: str = Field(..., description="thumbnail_img")
    video_provider: str = Field(..., description="video_provider")
    video_link: str = Field(..., description="video_link")
    tags: str = Field(..., description="tags")
    description: str = Field(..., description="description")
    unit_price: float = Field(..., description="unit_price")
    purchase_price: float = Field(..., description="purchase_price")
    variant_product: int = Field(..., description="variant_product")
    choice_no: list = Field(..., description="choice_number")
    choice_data: Dict[str, int] = Field(..., description="choice_options")
    colors: str = Field(..., description="colors")
    variations: str = Field(..., description="variations")
    todays_deal: int = Field(..., description="todays_deal")
    button: str = Field(..., description="published")
    approved: bool = Field(..., description="approved")
    stock_visibility_state: str = Field(..., description="stock_visibility_state")
    cash_on_delivery: bool = Field(..., description="cash_on_delivery")
    featured: int = Field(..., description="featured")
    seller_featured: int = Field(..., description="seller_featured")
    current_stock: int = Field(..., description="current_stock")
    unit: str = Field(..., description="unit")
    min_qty: int = Field(..., description="min_qty")
    low_stock_quantity: int = Field(..., description="low_stock_quantity")
    discount: float = Field(..., description="discount")
    discount_type: str = Field(..., description="discount_type")
    discount_start_date: int = Field(..., description="discount_start_date")
    discount_end_date: int = Field(..., description="discount_end_date")
    tax_id: List[int] = Field(..., description="tax")
    tax: List[float] = Field(..., description="tax")
    tax_type: str = Field(..., description="tax_type")
    flash_deal_id: int = Field(..., description="Flash Deal Id")
    translations: List[Dict[str, str]] = Field(..., description="Flash Deal Id")
    shipping_type: str = Field(..., description="shipping_type")
    shipping_cost: str = Field(..., description="shipping_cost")
    is_quantity_multiplied: bool = Field(..., description="is_quantity_multiplied")
    est_shipping_days: int = Field(..., description="est_shipping_days")
    num_of_sale: int = Field(..., description="num_of_sale")
    meta_title: str = Field(..., description="meta_title")
    meta_description: str = Field(..., description="meta_description")
    meta_img: str = Field(..., description="meta_img")
    pdf: str = Field(..., description="pdf")
    slug: str = Field(..., description="slug")
    rating: float = Field(..., description="rating")
    barcode: str = Field(..., description="barcode")
    digital: int = Field(..., description="digital")
    auction_product: int = Field(..., description="auction_product")
    file_name: str = Field(..., description="file_name")
    file_path: str = Field(..., description="file_path")


class UpdateProductRequestSchema(BaseModel):
    id: int = Field(..., description="Product Id")
    name: str = Field(..., description="Product Name")
    added_by: str = Field(..., description="Added by seller or admin")
    # user_id: int = Field(..., description="Owner's id")
    category_id: int = Field(..., description="category_id")
    brand_id: int = Field(..., description="brand_id")
    photos: str = Field(..., description="photos")
    thumbnail_img: str = Field(..., description="thumbnail_img")
    video_provider: str = Field(..., description="video_provider")
    video_link: str = Field(..., description="video_link")
    tags: str = Field(..., description="tags")
    description: str = Field(..., description="description")
    unit_price: float = Field(..., description="unit_price")
    purchase_price: float = Field(..., description="purchase_price")
    variant_product: int = Field(..., description="variant_product")
    choice_no: list = Field(..., description="choice_number")
    choice_data: dict = Field(..., description="choice_options")
    colors: str = Field(..., description="colors")
    variations: str = Field(..., description="variations")
    todays_deal: int = Field(..., description="todays_deal")
    button: str = Field(..., description="published")
    approved: bool = Field(..., description="approved")
    stock_visibility_state: str = Field(..., description="stock_visibility_state")
    cash_on_delivery: bool = Field(..., description="cash_on_delivery")
    featured: int = Field(..., description="featured")
    seller_featured: int = Field(..., description="seller_featured")
    current_stock: int = Field(..., description="current_stock")
    unit: str = Field(..., description="unit")
    min_qty: int = Field(..., description="min_qty")
    low_stock_quantity: int = Field(..., description="low_stock_quantity")
    discount: float = Field(..., description="discount")
    discount_type: str = Field(..., description="discount_type")
    discount_start_date: int = Field(..., description="discount_start_date")
    discount_end_date: int = Field(..., description="discount_end_date")
    tax_id: list = Field(..., description="tax_id")
    tax: list = Field(..., description="tax")
    tax_type: str = Field(..., description="tax_type")
    shipping_type: str = Field(..., description="shipping_type")
    shipping_cost: str = Field(..., description="shipping_cost")
    is_quantity_multiplied: bool = Field(..., description="is_quantity_multiplied")
    est_shipping_days: int = Field(..., description="est_shipping_days")
    num_of_sale: int = Field(..., description="num_of_sale")
    meta_title: str = Field(..., description="meta_title")
    meta_description: str = Field(..., description="meta_description")
    meta_img: str = Field(..., description="meta_img")
    pdf: str = Field(..., description="pdf")
    slug: str = Field(..., description="slug")
    rating: float = Field(..., description="rating")
    barcode: str = Field(..., description="barcode")
    digital: int = Field(..., description="digital")
    auction_product: int = Field(..., description="auction_product")
    file_name: str = Field(..., description="file_name")
    file_path: str = Field(..., description="file_path")


class AddProductResponseSchema(BaseModel):
    name: str = Field(..., description="Name")

    class Config:
        orm_mode = True
